%def: "seed" "924556145"
%def: "newSyntax" "true"
%def: "dumpIfDeadlocked" "true"
%def: "maxConsecutiveClash" "2"
%def: "plotPeriod" "1000" "events"
%def: "outputFileName" "data.csv"

%agent: A(x!x.B, c!x1.C!x2.C)
%agent: B(x!x.A)
%agent: C(x1~u~p!c.A, x2~u~p!c.A)

%var:/*0*/ 'on_rate' 0.001
%var:/*1*/ 'off_rate' (10 ^ -1)
%var:/*2*/ 'mod_rate' 1
%var:/*3*/ 'AB' |A(x!1), B(x!1)|
%var:/*4*/ 'Cuu' |C(x1~u, x2~u)|
%var:/*5*/ 'Cpu' |C(x1~p, x2~u)|
%var:/*6*/ 'Cpp' |C(x1~p, x2~p)|
%var:/*7*/ 'n_ab' 1000
%var:/*8*/ 'n_c' 0
%var:/*9*/ 'cflow' inf
%var:/*10*/ 'counter' 0
%plot: [T]
%plot: AB
%plot: Cuu
%plot: Cpu
%plot: Cpp
%plot: n_c

'a.b' A(x!./!1), B(x!./!1) @ on_rate
'a..b' A(x!1/!.), B(x!1/!.) @ off_rate
'ab.c' A(x!_, c!./!2), C(x1~u!./!2) @ on_rate
'mod x1' C(x1~u/~p!1/!.), A(c!1/!.) @ mod_rate
'a.c' A(x!., c!./!1), C(x1~p!., x2~u!./!1) @ on_rate
'mod x2' A(x!., c!1/!.), C(x1~p!., x2~u/~p!1/!.) @ mod_rate

/*0*/%mod: repeat (([E] [mod] 10000) = 0) do $SNAPSHOT "snap".counter."_".[E].".dot"; $UPDATE counter (counter + 1) until [false]
/*1*/%mod: ([T] > 5) do $ADD 10000 C(x1~u, x2~u)
/*2*/%mod: ([T] > 10) do $TRACK C(x1~p, x2~p) [true]; $UPDATE cflow Cpp
/*3*/%mod: ((Cpp - cflow) = 10) do $TRACK C(x1~p, x2~p) [false]

%init: n_ab A(x!., c!.), B(x!.)
%init: n_c C(x1~u!., x2~u!.)

%mod: [E] = 100000 do $STOP
